webpackHotUpdate("main",{

/***/ "./src/shared/Header/SortBlock/SortBlock.tsx":
/*!***************************************************!*\
  !*** ./src/shared/Header/SortBlock/SortBlock.tsx ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SortBlock = void 0;\r\nconst react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\nconst sortblock_css_1 = __importDefault(__webpack_require__(/*! ./sortblock.css */ \"./src/shared/Header/SortBlock/sortblock.css\"));\r\nconst ListInterface_1 = __webpack_require__(/*! ../../../interfaces/ListInterface */ \"./src/interfaces/ListInterface.tsx\");\r\nconst generateRandomIndex_1 = __webpack_require__(/*! ../../../utils/react/generateRandomIndex */ \"./src/utils/react/generateRandomIndex.ts\");\r\nconst merge_1 = __webpack_require__(/*! ../../../utils/js/merge */ \"./src/utils/js/merge.ts\");\r\nconst SORTLIST = [\r\n    { As: 'li', text: 'Просмотренное', className: `${sortblock_css_1.default['sort-block-item']}` },\r\n    { As: 'li', text: 'Сохранённое', className: `${sortblock_css_1.default['sort-block-item']}` },\r\n    { As: 'li', text: 'Мои посты', className: `${sortblock_css_1.default['sort-block-item']}` },\r\n    { As: 'li', text: 'Прокомментированное', className: `${sortblock_css_1.default['sort-block-item']}` },\r\n].map(generateRandomIndex_1.generateId);\r\nfunction pipe(...fns) {\r\n    return (initialValue) => fns.reduce((previousValue, fn) => fn(previousValue), initialValue);\r\n}\r\nfunction pick(prop) {\r\n    return (obj) => obj[prop];\r\n}\r\nfunction isEqual(left) {\r\n    return (right) => left === right;\r\n}\r\nfunction cond(b) {\r\n    return !b;\r\n}\r\nfunction SortBlock() {\r\n    const [defaultItem, setDefaultItem] = react_1.default.useState('Просмотренное');\r\n    const [list, setList] = react_1.default.useState(SORTLIST);\r\n    // const createFilterBy = (prop: string) => (id: string) => pipe(pick(prop), isEqual(id), cond)\r\n    // const filterWithId = createFilterBy('id')\r\n    const handleItemClick = (id) => {\r\n        // list.filter((item) => item.id === id ? setDefaultItem(item.text) : item);\r\n        // const filteredCards = list.filter(filterWithId(id))\r\n        console.log(id);\r\n    };\r\n    return (react_1.default.createElement(\"div\", { className: sortblock_css_1.default['sort-block'] },\r\n        react_1.default.createElement(\"div\", { className: sortblock_css_1.default['sort-block-list'] },\r\n            react_1.default.createElement(ListInterface_1.MyList, { list: list.map(((0, merge_1.merge)({ onClick: handleItemClick }))) }),\r\n            react_1.default.createElement(\"button\", { type: \"button\", className: sortblock_css_1.default.btn }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"))));\r\n}\r\nexports.SortBlock = SortBlock;\r\n\n\n//# sourceURL=webpack:///./src/shared/Header/SortBlock/SortBlock.tsx?");

/***/ })

})